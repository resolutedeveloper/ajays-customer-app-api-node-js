name: Service Deploy on Digital Ocean

on:
  workflow_dispatch:  # This allows manual triggering of the workflow
    inputs:
      deploy_service1:
        description: 'Deploy Catalog Service?'
        required: true
        default: 'false'
        type: boolean
      deploy_service2:
        description: 'Deploy Customer Service?'
        required: true
        default: 'false'
        type: boolean
      deploy_service3:
        description: 'Deploy Order Service?'
        required: true
        default: 'false'
        type: boolean

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code from GitHub repository (SSH)
      run: |
        mkdir -p ~/.ssh
        echo "$PRIVATE_KEY" > ~/.ssh/id_rsa
        chmod 600 ~/.ssh/id_rsa
        ssh-keyscan github.com >> ~/.ssh/known_hosts

    - name: Deploy using SSH
      uses: appleboy/ssh-action@master
      with:
        host: ${{ secrets.HOST }}
        username: ${{ secrets.USERNAME }}
        key: ${{ secrets.PRIVATE_KEY }}
        port: 22
        script: |
          cd /var/www/repo
          if [ ! -d ".git" ]; then
            echo "Cloning the repository using SSH..."
            git clone https://github.com/resolutedeveloper/ajays-customer-app-api-node-js.git .
          else
            echo "Pulling the latest changes..."
            git pull origin master
          fi

    - name: Enable sparse-checkout for service1
      if: ${{ github.event.inputs.deploy_service1 == 'true' }}
      run: |
        git sparse-checkout init --cone
        git sparse-checkout set service1

    - name: Deploy Service 1 using SSH
      if: ${{ github.event.inputs.deploy_service1 == 'true' }}
      uses: appleboy/ssh-action@master
      with:
        host: ${{ secrets.HOST }}
        username: ${{ secrets.USERNAME }}
        key: ${{ secrets.PRIVATE_KEY }}
        port: 22
        script: |
          cd /var/www
          git pull origin main

          npm install

          # Kill the app if it's running
          # pm2 delete service1 || true

          # Start or restart the app for service1
          # pm2 start /var/www/service1/service1.js --name service1

    - name: Enable sparse-checkout for service2
      if: ${{ github.event.inputs.deploy_service2 == 'true' }}
      run: |
        git sparse-checkout init --cone
        git sparse-checkout set service2

    - name: Deploy Service 2 using SSH
      if: ${{ github.event.inputs.deploy_service2 == 'true' }}
      uses: appleboy/ssh-action@master
      with:
        host: ${{ secrets.HOST }}
        username: ${{ secrets.USERNAME }}
        key: ${{ secrets.PRIVATE_KEY }}
        port: 22
        script: |
          cd /var/www
          git pull origin main

          npm install

          # Kill the app if it's running
          # pm2 delete service2 || true

          # Start or restart the app for service2
          # pm2 start /var/www/service2/service2.js --name service2

    - name: Enable sparse-checkout for service3
      if: ${{ github.event.inputs.deploy_service3 == 'true' }}
      run: |
        git sparse-checkout init --cone
        git sparse-checkout set service3

    - name: Deploy Service 3 using SSH
      if: ${{ github.event.inputs.deploy_service3 == 'true' }}
      uses: appleboy/ssh-action@master
      with:
        host: ${{ secrets.HOST }}
        username: ${{ secrets.USERNAME }}
        key: ${{ secrets.PRIVATE_KEY }}
        port: 22
        script: |
          cd /var/www
          git pull origin main

          npm install

          # Kill the app if it's running
          # pm2 delete service3 || true

          # Start or restart the app for service3
          # pm2 start /var/www/service3/service3.js --name service3

name: Service Deploy on Digital Ocean

on:
  workflow_dispatch:  # This allows manual triggering of the workflow
    inputs:
      deploy_service1:
        description: 'Deploy Catalog Service?'
        required: true
        default: 'false'
        type: boolean
      deploy_service2:
        description: 'Deploy Customer Service?'
        required: true
        default: 'false'
        type: boolean
      deploy_service3:
        description: 'Deploy Order Service?'
        required: true
        default: 'false'
        type: boolean

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - name: Set up SSH
      run: |
        mkdir -p ~/.ssh
        echo "$PRIVATE_KEY" > ~/.ssh/id_rsa
        chmod 600 ~/.ssh/id_rsa
        ssh-keyscan github.com >> ~/.ssh/known_hosts
        
    - name: Deploy using SSH
      uses: appleboy/ssh-action@master
      with:
        host: ${{ secrets.HOST }}
        username: ${{ secrets.USERNAME }}
        key: ${{ secrets.PRIVATE_KEY }}
        port: 22
        script: |
          cd /var/www/repo/public_html

          if [ ! -d ".git" ]; then
            echo "Cloning the repository using SSH..."
            git clone git@github.com:resolutedeveloper/ajays-customer-app-api-node-js.git .
          else
            echo "Pulling the latest changes..."
            git pull origin main
          fi

    - name: Deploy Catelog using SSH
      if: ${{ github.event.inputs.deploy_service1 == 'true' }}
      uses: appleboy/ssh-action@master
      with:
        host: ${{ secrets.HOST }}
        username: ${{ secrets.USERNAME }}
        key: ${{ secrets.PRIVATE_KEY }}
        port: 22
        script: |
          echo "Deploying Catalog Service..."

          # Set up environment variables for Catalog service
          export PORT_CATALOG=302
          export DB_HOST=139.59.1.105
          export DB_PORT=3306
          export DB_USER=root
          export DB_PASSWORD="${{ secrets.DB_PASSWORD }}"
          export DB_NAME_CATALOG=CatalogDB
          export NODE_ENV=production
          export CATALOG_LOCAL_URL=http://localhost:302/api/v1/
          export CUSTOMER_LOCAL_URL=http://localhost:301/api/v1/
          export ORDER_LOCAL_URL=http://localhost:300/api/v1/
          HTTP_REQUEST_SECRET_KEY=b4365ed7a1ed00f705f4bff7e7f4e977cdc14f4c3b967f0d38e57ab1552b1497
          SECRET_KEY=9lkeFOhxt10
          OTPDIGITS=4
          UPLOADPATH=uploads/
          
          # Copy the Catalog files to the target directory
          cp -r /var/www/repo/public_html/Catalog/* /var/www/Catalog/public_html

          echo "move to Catalog service .."
          cd /var/www/Catalog/public_html
          
          echo "installing the lib..."
          npm install

          # Kill the app if it's running
          pm2 delete catalog || true

          # Start or restart the app for Catalog
          pm2 start catalog.js --name catalog

    - name: Deploy Customer using SSH
      if: ${{ github.event.inputs.deploy_service2 == 'true' }}
      uses: appleboy/ssh-action@master
      with:
        host: ${{ secrets.HOST }}
        username: ${{ secrets.USERNAME }}
        key: ${{ secrets.PRIVATE_KEY }}
        port: 22
        script: |
          echo "Deploying Customer Service..."

          # Set up environment variables for Customer service
          export PORT_CUSTOMER=301
          export DB_HOST=139.59.1.105
          export DB_PORT=3306
          export DB_USER=root
          export DB_PASSWORD="${{ secrets.DB_PASSWORD }}"
          export DB_NAME_CUSTOMER=CustomerDB
          export NODE_ENV=production
          export CATALOG_LOCAL_URL=http://localhost:302/api/v1/
          export CUSTOMER_LOCAL_URL=http://localhost:301/api/v1/
          export ORDER_LOCAL_URL=http://localhost:300/api/v1/
          HTTP_REQUEST_SECRET_KEY=b4365ed7a1ed00f705f4bff7e7f4e977cdc14f4c3b967f0d38e57ab1552b1497
          SECRET_KEY=9lkeFOhxt10
          OTPDIGITS=4
          UPLOADPATH=uploads/
          
          # Copy the Customer files to the target directory
          cp -r /var/www/repo/public_html/Customer/* /var/www/Customer/public_html

          echo "move to Customer service .."
          cd /var/www/Customer/public_html

          echo "installing the lib..."
          npm install

          # Kill the app if it's running
          pm2 delete customer || true

          # Start or restart the app for Customer
          pm2 start customer.js --name customer

    - name: Deploy Order using SSH
      if: ${{ github.event.inputs.deploy_service3 == 'true' }}
      uses: appleboy/ssh-action@master
      with:
        host: ${{ secrets.HOST }}
        username: ${{ secrets.USERNAME }}
        key: ${{ secrets.PRIVATE_KEY }}
        port: 22
        script: |
          echo "Deploying Order Service..."

          # Set up environment variables for Customer service
          export PORT_ORDER=300
          export DB_HOST=139.59.1.105
          export DB_PORT=3306
          export DB_USER=root
          export DB_PASSWORD="${{ secrets.DB_PASSWORD }}"
          export DB_NAME_ORDER=OrderDB
          export NODE_ENV=production
          export CATALOG_LOCAL_URL=http://localhost:302/api/v1/
          export CUSTOMER_LOCAL_URL=http://localhost:301/api/v1/
          export ORDER_LOCAL_URL=http://localhost:300/api/v1/
          HTTP_REQUEST_SECRET_KEY=b4365ed7a1ed00f705f4bff7e7f4e977cdc14f4c3b967f0d38e57ab1552b1497
          SECRET_KEY=9lkeFOhxt10
          OTPDIGITS=4
          UPLOADPATH=uploads/
          
          # Copy the Order files to the target directory
          cp -r /var/www/repo/public_html/Order/* /var/www/Order/public_html

          echo "move to Order service .."
          cd /var/www/Order/public_html
          
          echo "installing the lib..."
          npm install

          # Kill the app if it's running
          pm2 delete order || true

          # Start or restart the app for Order
          pm2 start order.js --name order


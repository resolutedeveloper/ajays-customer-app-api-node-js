services:

  redis:
    image: redis:latest
    container_name: redis
    restart: always
    ports:
      - "6379:6379"
    networks:
      - network
    deploy:
      resources:
        limits:
          cpus: "0.5"    
          memory: 512M   
        reservations:
          cpus: "0.2"    
          memory: 256M  

  Catalog:
    build: ./Catalog
    container_name: catalog-server
    image: catalog
    depends_on:
      redis:
        condition: service_started
    env_file:
      - ./Catalog/.env  # Load environment variables from the .env file
    networks:
      - network
    ports:
      - "302:302"
    volumes:
      - /root/ajays-customer-app-api-node-js/Catalog/src/public:/app/public
    deploy:
      resources:
        limits:
          cpus: "1.0"   # Max 1 CPU core
          memory: 1.5G  # Max 1.5GB RAM
        reservations:
          cpus: "0.5"   # Reserve 0.5 CPU cores
          memory: 1G

  Customer:
    build: ./Customer
    container_name: customer-server
    image: customer
    depends_on:
      redis:
        condition: service_started
    env_file:
      - ./Customer/.env  # Load environment variables
    networks:
      - network
    ports:
      - "301:301"
    deploy:
      resources:
        limits:
          cpus: "1.0"   # Max 1 CPU core
          memory: 1.5G  # Max 1.5GB RAM
        reservations:
          cpus: "0.5"   # Reserve 0.5 CPU cores
          memory: 1G     

  Order:
    build: ./Order
    container_name: order-server
    image: order
    depends_on:
      redis:
        condition: service_started
    env_file:
      - ./Order/.env  # Load environment variables
    networks:
      - network
    ports:
      - "300:300"
    deploy:
      resources:
        limits:
          cpus: "1.0"   # Max 1 CPU core
          memory: 1.5G  # Max 1.5GB RAM
        reservations:
          cpus: "0.5"   # Reserve 0.5 CPU cores
          memory: 1G   

networks:
  network:
    driver: bridge

